package com.android.fibonacci_seriesimport androidx.appcompat.app.AppCompatActivityimport android.os.Bundleimport android.view.LayoutInflaterimport androidx.recyclerview.widget.LinearLayoutManagerimport androidx.recyclerview.widget.RecyclerViewimport com.android.fibonacci_series.databinding.ActivityMainBindingimport dagger.hilt.android.AndroidEntryPoint@AndroidEntryPointclass MainActivity : AppCompatActivity() {    private lateinit var binding: ActivityMainBinding    private lateinit var adapter: FibonacciListAdapter    private lateinit var mLayoutManager: LinearLayoutManager    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        binding = ActivityMainBinding.inflate(LayoutInflater.from(this))        setContentView(binding.root)        mLayoutManager = LinearLayoutManager(this)        binding.recyclerView.apply {            layoutManager = mLayoutManager        }        adapter = FibonacciListAdapter(ITEMS)        binding.recyclerView.adapter = adapter        binding.recyclerView.addOnScrollListener(scrollListener)    }    private val scrollListener = object : RecyclerView.OnScrollListener() {        override fun onScrolled(recyclerView: RecyclerView, dx: Int, dy: Int) {            super.onScrolled(recyclerView, dx, dy)            if (mLayoutManager.findLastCompletelyVisibleItemPosition() >= mLayoutManager.itemCount - 1) {                adapter.addItems(ITEMS)            }        }    }    companion object {        private const val ITEMS = 20    }}